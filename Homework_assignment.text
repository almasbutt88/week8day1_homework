Questions

What is responsible for defining the routes of the games resource?
answer: The create_router.js file 


What do you notice about the folder structure? Whats the client responsible for? Whats the server responsible for?
answer:
client is responsible for making requests to the server.
the server is responsible for receiving and fulfilling those requests. 

What are the the responsibilities of server.js?

answer: Server.js runs the server by signalling to the port the server will be run on.


What are the responsibilities of the gamesRouter?

answer: It defines the end points of the routes and their behaviours


What process does the the client (front-end) use to communicate with the server?


answer: MongoClient.connect('mongodb://localhost:27017...)
and fetch(baseURL)


What optional second argument does the fetch method take? And what is it used for in this application? Hint: See Using Fetch on the MDN docs


answer: the path to the resource or URL you want to fetch and second argument defines how much of that data you want to be returned and in which format


Which of the games API routes does the front-end application consume (i.e. make requests to)?

answer: router.get('/:id'..) as that is the one responsible for showing the index or home page of the website

What are we using the MongoDB Driver for?

answer: driver allows Node.js applications to connect to MongoDB and work with data

Extension

Why do we need to use ObjectId from the MongoDB driver?
answer: because ObjectId is unique and best piece of data to ensure we are accessing the
correct element

